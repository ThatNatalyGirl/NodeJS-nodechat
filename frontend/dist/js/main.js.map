{"version":3,"sources":["main.js"],"names":["console","log","timesStampOfLatestMessages","showMessagesOnDOM","messages","messagesUL","document","querySelector","forEach","message","i","newLi","createElement","userName","innerText","username","style","fontSize","color","newMessage","text","messageTime","moment","timestamp","format","newDeleteButton","addEventListener","axios","delete","then","response","catch","error","appendChild","sendMessage","field","value","post","fetchMessages","get","data","length","setInterval"],"mappings":"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","file":"main.js","sourcesContent":["console.log(`Let's Message!`);\n\n//user types, presses send, get message from field send message to server, get the messages list from the server  and the messages appears on the page\n\nlet timesStampOfLatestMessages = 0\n\nlet showMessagesOnDOM = function(messages){\n\tlet messagesUL = document.querySelector('ul.messages')\n\n\t// messagesUL.innerHTML = '';\n\t// while(messagesUL.children.length){\n\t// \tmessagesUL.removeChild(messagesUL.children[0])\n\t// }]\\\n\n\tconsole.log(\"messages\", messages)\n\tmessages.forEach(function(message, i){\n\t\tlet newLi = document.createElement('li')\n\t\t\n\t\tlet userName = document.createElement('p')\n\t\tuserName.innerText =  \"User: \" + message.username\n\t\tuserName.style.fontSize = '14px'\n\t\tuserName.style.color = 'blue'\n\n\t\tlet newMessage = document.createElement('p')\n\t\tnewMessage.innerText = message.text\n\n\t\tlet messageTime = document.createElement('p')\n\t\tmessageTime.innerText = moment(message.timestamp).format(\"MMM Do hh:mm:ss a\")\n\t\t// moment().format('MMMM Do YYYY, h:mm:ss a');\n\t\tmessageTime.style.color = '#a5c4f2'\n\t\tmessageTime.style.fontSize = '14px'\n\n\t\tlet newDeleteButton = document.createElement('button')\n\t\tnewDeleteButton.innerText = 'Delete'\n\n\t\tnewDeleteButton.addEventListener(\"click\", function(){\n\t\t\taxios\n\t\t\t\t.delete('http://localhost:1337/message/' + i)\n\t\t\t\t.then(function(response){\n\t\t\t\t\t// showMessagesOnDOM(response.data)\n\t\t\t\t})\n\t\t\t\t.catch(function (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t})\n\n\t\tmessagesUL.appendChild(newLi)\n\t\tnewLi.appendChild(userName)\n\t\tnewLi.appendChild(newMessage)\n\t\tnewLi.appendChild(messageTime)\n\t\tnewLi.appendChild(newDeleteButton)\n\t})\n}\n\n\n\n// axios\n// \t.delete('http://localhost:1337/message/0')\n// \t.then(function(response){\n\n// \t})\n// \t.catch(function (error) {\n// \t\tconsole.log(error);\n// \t});\n\n\n\n// let deleteLastMessage = function(){\n// \taxios.get('http://localhost:1337/message')\n// \t.then(function (response) {\n// \t\tsetInterval(showMessagesOnDOM(response.data), 3000)\n// \t\t// ^ that is updating the messages every 3 secs\n//   })\n// \taxios.post('http://localhost:1337/message', {\n// \t\ttext: field.value,\n// \t\tusername: username.value,\n// \t})\n\n// \t.then(function (response) {\n// \t\tconsole.log(\"yay\");\n// \t\tfield.value = '';\n// \t\t//clears out field and only works on successful submission\n// \t\t// console.log(\"server responded\", response.data)\n// \t\tshowMessagesOnDOM(response.data);\n// \t\t//array.pop \n// \t})\n// }\n\n\n\nlet sendMessage = function(){\n\tlet field = document.querySelector('input[name=\"new-message\"]');\n\tlet username = document.querySelector('input[name=\"username\"]');\n\tif (field.value){\n\t\t// console.log(\"send to server\", field.value)\n\t\taxios.post('http://localhost:1337/message', {\n\t\t\ttext: field.value,\n\t\t\tusername: username.value,\n\t\t})\n\t\t.then(function (response) {\n\t\t\tconsole.log(\"yay\");\n\t\t\tfield.value = '';\n\t\t})\n\t\t.catch(function (error) {\n\t\t\tconsole.log(error);\n\t\t});\n\t}\n}\n\n//updates all messages when the page loads\n// window.onload = function(){\n// \taxios.get('http://localhost:1337/message')\n// \t.then(function (response) {\n// \t\tsetInterval(showMessagesOnDOM(response.data), 3000)\n// \t\t// ^ that is updating the messages every 3 secs\n//   })\n//   .catch(function (error) {\n// \tconsole.log(error);\n//   });\n// }\n//this wouldn't work bc it only is repeating the messages that existed when the page loaded\n\n\n\n\nlet fetchMessages = function(){\n\taxios.get('http://localhost:1337/message/since/'  + timesStampOfLatestMessages)\n\t.then(function (response) {\n\t\tshowMessagesOnDOM(response.data)\n\n\t\tif(response.data.length){\n\t\t\ttimesStampOfLatestMessages = (response.data[response.data.length-1].timestamp)\n\t\t}\n\t})\n\t.catch(function (error) {\n\t\tconsole.log(error);\n\t});\n}\n\nfetchMessages()\nsetInterval(fetchMessages, 3000)\n\n\ndocument.querySelector(\".sendBtn\").addEventListener('click', sendMessage);\n\n// document.querySelector(\".deleteBtn\").addEventListener('click', deleteLastMessage);\n\n\n\n\n\n\n\n\n"]}